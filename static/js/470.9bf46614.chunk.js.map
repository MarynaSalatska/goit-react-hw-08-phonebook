{"version":3,"file":"static/js/470.9bf46614.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/FriendForm/FriendForm.module.css?ce35","components/FriendForm/FriendForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactsList/ContactsList.jsx","components/views/ContactsView.jsx","redux/selectors.js","webpack://react-homework-template/./src/components/Layout/Layout.module.css?3701"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnDelete\":\"ContactListItem_btnDelete__xNYoO\",\"listSt\":\"ContactListItem_listSt__1wBTo\",\"listUl\":\"ContactListItem_listUl__qDL0O\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\nimport css from '../ContactListItem/ContactListItem.module.css';\n\nexport function Filter() {\n  const value = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n  //////////////////////filter\n  const handleFilterChange = e => {\n    // const { value } = e.target;\n    // setFilter(value);\n    dispatch(addFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <div className={css.listUl}>\n        <p >Find contacts by name</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={handleFilterChange}\n        />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"addBtn\":\"FriendForm_addBtn__d10DK\",\"formCnt\":\"FriendForm_formCnt__WO7dd\",\"labelCnt\":\"FriendForm_labelCnt__Dwk3a\"};","import React, { useState } from 'react';\nimport css from './FriendForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactOperation } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nexport function FriendForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n    const isExist = contacts.some(item => {\n      return item.name === name && item.number === number;\n    });\n    if (isExist) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    dispatch(addContactOperation(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.formCnt}>\n      <label className={css.labelCnt}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.labelCnt}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.addBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactOperation } from 'redux/operations';\nimport css from './ContactListItem.module.css';\n// import { deleteContact } from '../../services/api';\n\nexport function ContactListItem({ name, number, btnId }) {\n  const dispatch = useDispatch();\n  const deleteContacts = e => {\n    dispatch(deleteContactOperation(e.target.id));\n  };\n\n  return (\n    <li className={css.listSt}>\n      {name}: <span>{number} </span>\n      <button id={btnId} onClick={deleteContacts} className={css.btnDelete}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  btnId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContactsOperation } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport css from '../ContactListItem/ContactListItem.module.css';\n\n\nexport function ContactsList() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContactsOperation());\n  }, [dispatch]);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filterContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ul className={css.listUl}>\n      {filterContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} name={name} number={number} btnId={id} />\n      ))}\n    </ul>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import React from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { FriendForm } from 'components/FriendForm/FriendForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Outlet } from 'react-router-dom';\nimport css from '../Layout/Layout.module.css';\n\nexport default function ContactsView() {\n  return (\n    <div>\n      <h1 className={css.titleContact}>Phonebook</h1>\n      <FriendForm />\n      <h2 className={css.titleContact}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n      <Outlet />\n    </div>\n  );\n}\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectToken = state => state.auth.token;\nexport const selectUserEmail = state => state.auth.email;\n","// extracted by mini-css-extract-plugin\nexport default {\"active\":\"Layout_active__kUCp+\",\"NavLink\":\"Layout_NavLink__hXLO7\",\"header\":\"Layout_header__zwfg9\",\"titleHome\":\"Layout_titleHome__mjiW5\",\"nav\":\"Layout_nav__N52xQ\",\"homeImg\":\"Layout_homeImg__+BmkQ\",\"titleContact\":\"Layout_titleContact__8DKYS\"};"],"names":["Filter","value","useSelector","state","filter","dispatch","useDispatch","className","css","type","name","onChange","e","addFilter","target","FriendForm","onSubmit","useState","setName","number","setNumber","contacts","selectContacts","handleInputChange","reset","preventDefault","newContact","some","item","alert","addContactOperation","pattern","title","required","ContactListItem","btnId","id","onClick","deleteContactOperation","ContactsList","useEffect","getContactsOperation","selectFilter","filterContacts","contact","toLowerCase","trim","includes","map","ContactsView","items","selectToken","auth","token","selectUserEmail","email"],"sourceRoot":""}